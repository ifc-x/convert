(function(f,c){typeof exports=="object"&&typeof module<"u"?c(exports):typeof define=="function"&&define.amd?define(["exports"],c):(f=typeof globalThis<"u"?globalThis:f||self,c(f.IFCxConvert={}))})(this,(function(f){"use strict";var c=typeof document<"u"?document.currentScript:null;class m{constructor(){this.readers=[],this.writers=[]}async addReader(e){this.readers.push(e)}async addWriter(e){this.writers.push(e)}findReader(e,r){return this.readers.filter(s=>s.environments.includes(e)&&s.formats.includes(r)).sort((s,t)=>t.priority-s.priority)[0]}findWriter(e,r="sqlite"){return this.writers.filter(s=>s.environments.includes(e)&&s.formats.includes(r)).sort((s,t)=>t.priority-s.priority)[0]}findCompatiblePair(e,r,i="sqlite"){const s=this.readers.filter(o=>o.environments.includes(e)&&o.formats.includes(r)),t=this.writers.filter(o=>o.environments.includes(e)&&o.formats.includes(i));for(const o of s.sort((d,a)=>a.priority-d.priority))for(const d of t.sort((a,u)=>u.priority-a.priority)){const a=(o.outputs||[]).find(u=>(d.inputs||[]).includes(u));if(a)return{ReaderClass:o,WriterClass:d,dataType:a}}return null}}const l=new m,g=typeof process<"u"&&process?.versions?.node?"node":"browser";class y{constructor({env:e,readerClass:r,writerClass:i}={}){this.env=e||g,this.forcedReader=r,this.forcedWriter=i,this.middleware=[]}use(e){return this.middleware.push(e),this}getReader(e){if(this.forcedReader)return new this.forcedReader;const r=l.findReader(this.env,e);if(!r)throw new Error(`No reader registered for type=${e} env=${this.env}`);return new r}getWriter(e){if(this.forcedWriter)return new this.forcedWriter;const r=l.findWriter(this.env,e);if(!r)throw new Error(`No writer registered for type=${e} env=${this.env}`);return new r}initProgress(){this.progress=null,this.progressCallback=null}emitProgress(e){var r=this.progress;this.progress=Math.round(e*100),r!==this.progress&&this.progressCallback&&this.progressCallback(this.progress)}async convert(e,{inputType:r,outputType:i,progressCallback:s}={}){const t=r,o=i;this.progressCallback=s;const d=l.findCompatiblePair(this.env,t,o);if(!d)throw new Error(`No compatible reader/writer for ${t} → ${o}`);const{ReaderClass:a,WriterClass:u,dataType:h}=d,q=new a,T=new u;let w=await q.read(e,{type:h,progressCallback:p=>this.emitProgress(p*.5)});for(const p of this.middleware)w=await p(w);return T.write(w,{type:h,progressCallback:p=>this.emitProgress(.5+p*.5)})}}async function b(n){if(n instanceof Uint8Array)return n;if(n instanceof ArrayBuffer)return new Uint8Array(n);if(typeof n=="string"){const r=await(await fetch(n)).arrayBuffer();return new Uint8Array(r)}if(typeof File<"u"&&n instanceof File||typeof Blob<"u"&&n instanceof Blob){const e=await n.arrayBuffer();return new Uint8Array(e)}throw new Error("Cannot convert input to Uint8Array")}function C(n){if(typeof n=="string"&&n.includes("."))return n.split(".").pop().toLowerCase();if(typeof File<"u"&&n instanceof File||typeof Blob<"u"&&n instanceof Blob&&n.name)return n.name.split(".").pop().toLowerCase();throw new Error("Unable to detect type — pass { type } explicitly")}async function v(n,e={}){const{middleware:r=[],readerClass:i,writerClass:s,env:t,outputType:o,progressCallback:d}=e;let{inputType:a}=e;a||=C(n);const u=new y({env:t,readerClass:i,writerClass:s});return r.forEach(h=>u.use(h)),u.convert(await b(n),{inputType:a,outputType:o,progressCallback:d})}class R{static formats=["ifc"];static environments=["browser"];static priority=10;static outputs=["tabular","ifc"];constructor(){this.worker=new Worker(new URL("/assets/ifc-reader-worker-CIdLR5ic.js",typeof document>"u"&&typeof location>"u"?require("url").pathToFileURL(__filename).href:typeof document>"u"?location.href:c&&c.tagName.toUpperCase()==="SCRIPT"&&c.src||new URL("index.umd.js",document.baseURI).href),{type:"module"}),this.requestId=0,this.pending=new Map,this.worker.onmessage=e=>{const{id:r,result:i=null,error:s=null,progress:t=null}=e.data,{resolve:o,reject:d,progressCallback:a}=this.pending.get(r);if(t!==null){a(t);return}this.pending.delete(r),s?d(new Error(s)):o(i)}}read(e,{type:r,progressCallback:i}={}){return r=="ifc"?e:(i||=()=>{},new Promise(async(s,t)=>{try{const o=this.requestId++;this.pending.set(o,{resolve:s,reject:t,progressCallback:i}),this.worker.postMessage({id:o,buffer:e.buffer},[e.buffer])}catch(o){t(o)}}))}}class U{static formats=["frag"];static environments=["browser"];static priority=10;static outputs=["tabular"];constructor(){this.worker=new Worker(new URL("/assets/frag-reader-worker-DBG-HGDV.js",typeof document>"u"&&typeof location>"u"?require("url").pathToFileURL(__filename).href:typeof document>"u"?location.href:c&&c.tagName.toUpperCase()==="SCRIPT"&&c.src||new URL("index.umd.js",document.baseURI).href),{type:"module"}),this.requestId=0,this.pending=new Map,this.worker.onmessage=e=>{const{id:r,result:i=null,error:s=null,progress:t=null}=e.data,{resolve:o,reject:d,progressCallback:a}=this.pending.get(r);if(t!==null){a(t);return}this.pending.delete(r),s?d(new Error(s)):o(i)}}read(e,{progressCallback:r}={}){return r||=()=>{},new Promise(async(i,s)=>{try{const t=this.requestId++;this.pending.set(t,{resolve:i,reject:s,progressCallback:r}),this.worker.postMessage({id:t,buffer:e.buffer},[e.buffer])}catch(t){s(t)}})}}class k{static formats=["frag"];static environments=["browser"];static priority=10;static inputs=["ifc"];constructor(){this.worker=new Worker(new URL("/assets/frag-writer-worker-DuXh9UCh.js",typeof document>"u"&&typeof location>"u"?require("url").pathToFileURL(__filename).href:typeof document>"u"?location.href:c&&c.tagName.toUpperCase()==="SCRIPT"&&c.src||new URL("index.umd.js",document.baseURI).href),{type:"module"}),this.requestId=0,this.pending=new Map,this.worker.onmessage=e=>{const{id:r,result:i=null,error:s=null,progress:t=null}=e.data,{resolve:o,reject:d,progressCallback:a}=this.pending.get(r);if(t!==null){a(t);return}this.pending.delete(r),s?d(new Error(s)):o(i)}}write(e,{progressCallback:r}={}){return r||=()=>{},new Promise(async(i,s)=>{try{const t=this.requestId++;this.pending.set(t,{resolve:i,reject:s,progressCallback:r}),this.worker.postMessage({id:t,input:e})}catch(t){s(t)}})}}class I{static formats=["db","db3","sqlite","sqlite3"];static environments=["browser"];static priority=10;static inputs=["tabular"];constructor(){this.worker=new Worker(new URL("/assets/sqlite-writer-worker-Btyf4S85.js",typeof document>"u"&&typeof location>"u"?require("url").pathToFileURL(__filename).href:typeof document>"u"?location.href:c&&c.tagName.toUpperCase()==="SCRIPT"&&c.src||new URL("index.umd.js",document.baseURI).href),{type:"module"}),this.requestId=0,this.pending=new Map,this.worker.onmessage=e=>{const{id:r,result:i=null,error:s=null,progress:t=null}=e.data,{resolve:o,reject:d,progressCallback:a}=this.pending.get(r);if(t!==null){a(t);return}this.pending.delete(r),s?d(new Error(s)):o(i)}}write(e,{progressCallback:r}={}){return r||=()=>{},new Promise(async(i,s)=>{try{const t=this.requestId++;this.pending.set(t,{resolve:i,reject:s,progressCallback:r}),this.worker.postMessage({id:t,input:e})}catch(t){s(t)}})}}l.addReader(R),l.addReader(U),l.addWriter(k),l.addWriter(I),f.Converter=y,f.convert=v,f.registry=l,Object.defineProperty(f,Symbol.toStringTag,{value:"Module"})}));window.IFCx||={};window.IFCx.convert=IFCxConvert.convert;
